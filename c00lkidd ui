-- CoolKidd GUI Library - Exploit Style
-- Place this in ReplicatedStorage as a ModuleScript

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")

local CoolKidd = {}
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Window Class
local Window = {}
Window.__index = Window

function Window:NewTab(tabSettings)
    tabSettings = tabSettings or {}
    local tabName = tabSettings.Name or "New Tab"
    
    local tab = {
        Name = tabName,
        Elements = {},
        Frame = nil,
        Active = false
    }
    
    -- Create tab frame with grid layout
    local tabFrame = Instance.new("ScrollingFrame")
    tabFrame.Name = "Tab_" .. tabName
    tabFrame.Size = UDim2.new(1, 0, 1, 0)
    tabFrame.Position = UDim2.new(0, 0, 0, 0)
    tabFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    tabFrame.BorderSizePixel = 0
    tabFrame.ScrollBarThickness = 8
    tabFrame.ScrollBarImageColor3 = Color3.fromRGB(255, 0, 0)
    tabFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    tabFrame.Visible = false
    tabFrame.Parent = self.ContentFrame
    
    -- Grid layout for buttons
    local gridLayout = Instance.new("UIGridLayout")
    gridLayout.CellSize = UDim2.new(0, 180, 0, 35)
    gridLayout.CellPadding = UDim2.new(0, 5, 0, 5)
    gridLayout.SortOrder = Enum.SortOrder.LayoutOrder
    gridLayout.StartCorner = Enum.StartCorner.TopLeft
    gridLayout.FillDirection = Enum.FillDirection.Horizontal
    gridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
    gridLayout.VerticalAlignment = Enum.VerticalAlignment.Top
    gridLayout.Parent = tabFrame
    
    local tabPadding = Instance.new("UIPadding")
    tabPadding.PaddingTop = UDim.new(0, 8)
    tabPadding.PaddingBottom = UDim.new(0, 8)
    tabPadding.PaddingLeft = UDim.new(0, 8)
    tabPadding.PaddingRight = UDim.new(0, 8)
    tabPadding.Parent = tabFrame
    
    tab.Frame = tabFrame
    
    -- Create tab button in header
    local tabButton = Instance.new("TextButton")
    tabButton.Name = "TabButton_" .. tabName
    tabButton.Size = UDim2.new(0, 100, 1, -4)
    tabButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    tabButton.BorderSizePixel = 1
    tabButton.BorderColor3 = Color3.fromRGB(255, 0, 0)
    tabButton.Text = tabName
    tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    tabButton.TextSize = 12
    tabButton.Font = Enum.Font.Arial
    tabButton.Parent = self.TabContainer
    
    -- Tab button functionality
    tabButton.MouseButton1Click:Connect(function()
        self:SwitchToTab(#self.Tabs + 1)
    end)
    
    -- Hover effect
    tabButton.MouseEnter:Connect(function()
        if not tab.Active then
            tabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        end
    end)
    
    tabButton.MouseLeave:Connect(function()
        if not tab.Active then
            tabButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        end
    end)
    
    -- Tab methods
    function tab:NewButton(buttonSettings)
        buttonSettings = buttonSettings or {}
        local buttonName = buttonSettings.Name or "Button"
        local buttonCallback = buttonSettings.Callback or function() end
        
        local button = Instance.new("TextButton")
        button.Name = "ExploitButton"
        button.Size = UDim2.new(0, 180, 0, 35)
        button.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        button.BorderSizePixel = 1
        button.BorderColor3 = Color3.fromRGB(255, 0, 0)
        button.Text = buttonName
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.TextSize = 11
        button.Font = Enum.Font.Arial
        button.Parent = tabFrame
        
        -- Red gradient background
        local gradient = Instance.new("UIGradient")
        gradient.Color = ColorSequence.new{
            ColorSequenceKeypoint.new(0, Color3.fromRGB(50, 10, 10)),
            ColorSequenceKeypoint.new(0.5, Color3.fromRGB(30, 30, 30)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 10, 10))
        }
        gradient.Rotation = 90
        gradient.Parent = button
        
        -- Button functionality
        button.MouseButton1Click:Connect(function()
            -- Flash effect
            local flash = TweenService:Create(button, TweenInfo.new(0.1), {
                BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            })
            flash:Play()
            flash.Completed:Connect(function()
                TweenService:Create(button, TweenInfo.new(0.1), {
                    BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                }):Play()
            end)
            
            buttonCallback()
        end)
        
        -- Hover effects
        button.MouseEnter:Connect(function()
            button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            button.BorderColor3 = Color3.fromRGB(255, 100, 100)
        end)
        
        button.MouseLeave:Connect(function()
            button.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            button.BorderColor3 = Color3.fromRGB(255, 0, 0)
        end)
        
        self:UpdateCanvasSize()
        return button
    end
    
    function tab:NewTextInput(inputSettings)
        inputSettings = inputSettings or {}
        local inputName = inputSettings.Name or "Text Input"
        local placeholder = inputSettings.Placeholder or "Enter text..."
        local inputCallback = inputSettings.Callback or function() end
        
        local inputFrame = Instance.new("Frame")
        inputFrame.Name = "InputFrame"
        inputFrame.Size = UDim2.new(0, 370, 0, 60)
        inputFrame.BackgroundTransparency = 1
        inputFrame.Parent = tabFrame
        
        local label = Instance.new("TextLabel")
        label.Name = "Label"
        label.Size = UDim2.new(1, 0, 0, 20)
        label.Position = UDim2.new(0, 0, 0, 0)
        label.BackgroundTransparency = 1
        label.Text = inputName
        label.TextColor3 = Color3.fromRGB(255, 0, 0)
        label.TextSize = 12
        label.Font = Enum.Font.Arial
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Parent = inputFrame
        
        local textBox = Instance.new("TextBox")
        textBox.Name = "TextBox"
        textBox.Size = UDim2.new(1, 0, 0, 30)
        textBox.Position = UDim2.new(0, 0, 0, 25)
        textBox.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
        textBox.BorderSizePixel = 1
        textBox.BorderColor3 = Color3.fromRGB(255, 0, 0)
        textBox.Text = ""
        textBox.PlaceholderText = placeholder
        textBox.PlaceholderColor3 = Color3.fromRGB(100, 100, 100)
        textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
        textBox.TextSize = 11
        textBox.Font = Enum.Font.Arial
        textBox.TextXAlignment = Enum.TextXAlignment.Left
        textBox.Parent = inputFrame
        
        local textBoxPadding = Instance.new("UIPadding")
        textBoxPadding.PaddingLeft = UDim.new(0, 5)
        textBoxPadding.PaddingRight = UDim.new(0, 5)
        textBoxPadding.Parent = textBox
        
        -- TextBox functionality
        textBox.FocusLost:Connect(function(enterPressed)
            if enterPressed then
                inputCallback(textBox.Text)
            end
        end)
        
        -- Focus animations
        textBox.Focused:Connect(function()
            textBox.BorderColor3 = Color3.fromRGB(255, 100, 100)
            textBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        end)
        
        textBox.FocusLost:Connect(function()
            textBox.BorderColor3 = Color3.fromRGB(255, 0, 0)
            textBox.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
        end)
        
        self:UpdateCanvasSize()
        return textBox
    end
    
    function tab:NewToggle(toggleSettings)
        toggleSettings = toggleSettings or {}
        local toggleName = toggleSettings.Name or "Toggle"
        local toggleDefault = toggleSettings.Default or false
        local toggleCallback = toggleSettings.Callback or function() end
        
        local toggleButton = Instance.new("TextButton")
        toggleButton.Name = "ToggleButton"
        toggleButton.Size = UDim2.new(0, 180, 0, 35)
        toggleButton.BackgroundColor3 = toggleDefault and Color3.fromRGB(0, 100, 0) or Color3.fromRGB(30, 30, 30)
        toggleButton.BorderSizePixel = 1
        toggleButton.BorderColor3 = Color3.fromRGB(255, 0, 0)
        toggleButton.Text = (toggleDefault and "✓ " or "✗ ") .. toggleName
        toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        toggleButton.TextSize = 11
        toggleButton.Font = Enum.Font.Arial
        toggleButton.Parent = tabFrame
        
        local toggleState = toggleDefault
        
        -- Gradient for toggle
        local gradient = Instance.new("UIGradient")
        gradient.Color = ColorSequence.new{
            ColorSequenceKeypoint.new(0, toggleState and Color3.fromRGB(0, 80, 0) or Color3.fromRGB(50, 10, 10)),
            ColorSequenceKeypoint.new(0.5, toggleState and Color3.fromRGB(0, 100, 0) or Color3.fromRGB(30, 30, 30)),
            ColorSequenceKeypoint.new(1, toggleState and Color3.fromRGB(0, 80, 0) or Color3.fromRGB(50, 10, 10))
        }
        gradient.Rotation = 90
        gradient.Parent = toggleButton
        
        -- Toggle functionality
        toggleButton.MouseButton1Click:Connect(function()
            toggleState = not toggleState
            
            local newColor = toggleState and Color3.fromRGB(0, 100, 0) or Color3.fromRGB(30, 30, 30)
            local newText = (toggleState and "✓ " or "✗ ") .. toggleName
            
            toggleButton.BackgroundColor3 = newColor
            toggleButton.Text = newText
            
            -- Update gradient
            gradient.Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0, toggleState and Color3.fromRGB(0, 80, 0) or Color3.fromRGB(50, 10, 10)),
                ColorSequenceKeypoint.new(0.5, toggleState and Color3.fromRGB(0, 100, 0) or Color3.fromRGB(30, 30, 30)),
                ColorSequenceKeypoint.new(1, toggleState and Color3.fromRGB(0, 80, 0) or Color3.fromRGB(50, 10, 10))
            }
            
            toggleCallback(toggleState)
        end)
        
        -- Hover effect
        toggleButton.MouseEnter:Connect(function()
            toggleButton.BorderColor3 = Color3.fromRGB(255, 100, 100)
        end)
        
        toggleButton.MouseLeave:Connect(function()
            toggleButton.BorderColor3 = Color3.fromRGB(255, 0, 0)
        end)
        
        self:UpdateCanvasSize()
        return {
            Toggle = toggleButton,
            GetValue = function() return toggleState end,
            SetValue = function(value)
                toggleState = value
                local newColor = toggleState and Color3.fromRGB(0, 100, 0) or Color3.fromRGB(30, 30, 30)
                local newText = (toggleState and "✓ " or "✗ ") .. toggleName
                
                toggleButton.BackgroundColor3 = newColor
                toggleButton.Text = newText
                
                gradient.Color = ColorSequence.new{
                    ColorSequenceKeypoint.new(0, toggleState and Color3.fromRGB(0, 80, 0) or Color3.fromRGB(50, 10, 10)),
                    ColorSequenceKeypoint.new(0.5, toggleState and Color3.fromRGB(0, 100, 0) or Color3.fromRGB(30, 30, 30)),
                    ColorSequenceKeypoint.new(1, toggleState and Color3.fromRGB(0, 80, 0) or Color3.fromRGB(50, 10, 10))
                }
            end
        }
    end
    
    function tab:UpdateCanvasSize()
        local gridLayout = tabFrame:FindFirstChild("UIGridLayout")
        if gridLayout then
            local contentSize = gridLayout.AbsoluteContentSize
            tabFrame.CanvasSize = UDim2.new(0, 0, 0, contentSize.Y + 20)
        end
    end
    
    table.insert(self.Tabs, tab)
    
    -- If this is the first tab, make it active
    if #self.Tabs == 1 then
        self:SwitchToTab(1)
        -- Force visibility for first tab
        tabFrame.Visible = true
    end
    
    return tab
end

function Window:SwitchToTab(tabIndex)
    -- Hide all tabs
    for i, tab in pairs(self.Tabs) do
        tab.Frame.Visible = false
        tab.Active = false
        
        local tabButton = self.TabContainer:FindFirstChild("TabButton_" .. tab.Name)
        if tabButton then
            tabButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        end
    end
    
    -- Show selected tab
    if self.Tabs[tabIndex] then
        self.Tabs[tabIndex].Frame.Visible = true
        self.Tabs[tabIndex].Active = true
        
        local tabButton = self.TabContainer:FindFirstChild("TabButton_" .. self.Tabs[tabIndex].Name)
        if tabButton then
            tabButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        end
        
        self.CurrentTab = tabIndex
    end
end

function Window:NextTab()
    local nextIndex = self.CurrentTab + 1
    if nextIndex > #self.Tabs then
        nextIndex = 1
    end
    self:SwitchToTab(nextIndex)
end

function Window:PreviousTab()
    local prevIndex = self.CurrentTab - 1
    if prevIndex < 1 then
        prevIndex = #self.Tabs
    end
    self:SwitchToTab(prevIndex)
end

function Window:Destroy()
    if self.ScreenGui then
        self.ScreenGui:Destroy()
    end
end

-- Main CoolKidd functions
function CoolKidd.NewWindow(windowSettings)
    windowSettings = windowSettings or {}
    local windowName = windowSettings.Name or "Exploit GUI"
    local windowSize = windowSettings.Size or UDim2.new(0, 600, 0, 450)
    
    local window = setmetatable({
        Name = windowName,
        Size = windowSize,
        Tabs = {},
        CurrentTab = 1
    }, Window)
    
    -- Create ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ExploitGUI_" .. windowName
    screenGui.ResetOnSpawn = false
    screenGui.DisplayOrder = 999999
    screenGui.Parent = playerGui
    
    window.ScreenGui = screenGui
    
    -- Main Frame
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = windowSize
    mainFrame.Position = UDim2.new(0.5, -windowSize.X.Offset/2, 0.5, -windowSize.Y.Offset/2)
    mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    mainFrame.BorderSizePixel = 2
    mainFrame.BorderColor3 = Color3.fromRGB(255, 0, 0)
    mainFrame.Active = true
    mainFrame.Draggable = true
    mainFrame.Parent = screenGui
    
    -- Main gradient
    local mainGradient = Instance.new("UIGradient")
    mainGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(35, 35, 35)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(25, 25, 25)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(15, 15, 15))
    }
    mainGradient.Rotation = 135
    mainGradient.Parent = mainFrame
    
    -- Header
    local header = Instance.new("Frame")
    header.Name = "Header"
    header.Size = UDim2.new(1, 0, 0, 40)
    header.Position = UDim2.new(0, 0, 0, 0)
    header.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
    header.BorderSizePixel = 1
    header.BorderColor3 = Color3.fromRGB(255, 50, 50)
    header.Parent = mainFrame
    
    local headerGradient = Instance.new("UIGradient")
    headerGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(200, 0, 0)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(150, 0, 0))
    }
    headerGradient.Rotation = 90
    headerGradient.Parent = header
    
    -- Title
    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Size = UDim2.new(1, -50, 1, 0)
    title.Position = UDim2.new(0, 5, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = windowName
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextSize = 14
    title.Font = Enum.Font.ArialBold
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = header
    
    -- Close Button
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton"
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -35, 0, 5)
    closeButton.BackgroundColor3 = Color3.fromRGB(150, 0, 0)
    closeButton.BorderSizePixel = 1
    closeButton.BorderColor3 = Color3.fromRGB(255, 0, 0)
    closeButton.Text = "X"
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.TextSize = 16
    closeButton.Font = Enum.Font.ArialBold
    closeButton.Parent = header
    
    -- Tab Container
    local tabContainer = Instance.new("Frame")
    tabContainer.Name = "TabContainer"
    tabContainer.Size = UDim2.new(1, 0, 0, 30)
    tabContainer.Position = UDim2.new(0, 0, 0, 40)
    tabContainer.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    tabContainer.BorderSizePixel = 1
    tabContainer.BorderColor3 = Color3.fromRGB(255, 0, 0)
    tabContainer.Parent = mainFrame
    
    local tabLayout = Instance.new("UIListLayout")
    tabLayout.FillDirection = Enum.FillDirection.Horizontal
    tabLayout.SortOrder = Enum.SortOrder.LayoutOrder
    tabLayout.Padding = UDim.new(0, 2)
    tabLayout.Parent = tabContainer
    
    local tabPadding = Instance.new("UIPadding")
    tabPadding.PaddingAll = UDim.new(0, 2)
    tabPadding.Parent = tabContainer
    
    -- Content Frame
    local contentFrame = Instance.new("Frame")
    contentFrame.Name = "ContentFrame"
    contentFrame.Size = UDim2.new(1, 0, 1, -70)
    contentFrame.Position = UDim2.new(0, 0, 0, 70)
    contentFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    contentFrame.BorderSizePixel = 0
    contentFrame.Parent = mainFrame
    
    window.MainFrame = mainFrame
    window.ContentFrame = contentFrame
    window.TabContainer = tabContainer
    
    -- Close button functionality
    closeButton.MouseButton1Click:Connect(function()
        screenGui:Destroy()
    end)
    
    -- Hover effects
    closeButton.MouseEnter:Connect(function()
        closeButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
    end)
    
    closeButton.MouseLeave:Connect(function()
        closeButton.BackgroundColor3 = Color3.fromRGB(150, 0, 0)
    end)
    
    return window
end

return CoolKidd
